-- =====================================================
-- Additional Staging Tables for Generated CSV Data
-- Description: Creates staging tables for the generated sample data
-- Version: 1.0
-- Date: 2025-07-20
-- =====================================================

USE SCHEMA <% database_name %>.STAGING_SCHEMA<% schema_suffix %>;

-- Staging table for customer segments CSV
CREATE TABLE IF NOT EXISTS STG_CUSTOMER_SEGMENTS_RAW (
    SEGMENT_ID VARCHAR(10),
    SEGMENT_NAME VARCHAR(50),
    DESCRIPTION VARCHAR(200),
    MIN_ANNUAL_REVENUE VARCHAR(20),
    MAX_ANNUAL_REVENUE VARCHAR(20),
    DISCOUNT_RATE VARCHAR(10),
    LOAD_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FILE_NAME VARCHAR(200),
    ROW_NUMBER NUMBER
);

-- Staging table for categories CSV
CREATE TABLE IF NOT EXISTS STG_CATEGORIES_RAW (
    CATEGORY_ID VARCHAR(10),
    CATEGORY_NAME VARCHAR(50),
    DESCRIPTION VARCHAR(200),
    PARENT_CATEGORY_ID VARCHAR(10),
    LOAD_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FILE_NAME VARCHAR(200),
    ROW_NUMBER NUMBER
);

-- Staging table for suppliers CSV
CREATE TABLE IF NOT EXISTS STG_SUPPLIERS_RAW (
    SUPPLIER_ID VARCHAR(10),
    SUPPLIER_NAME VARCHAR(100),
    CONTACT_NAME VARCHAR(100),
    CONTACT_TITLE VARCHAR(50),
    ADDRESS VARCHAR(200),
    CITY VARCHAR(50),
    REGION VARCHAR(50),
    POSTAL_CODE VARCHAR(20),
    COUNTRY VARCHAR(30),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(100),
    WEBSITE VARCHAR(200),
    STATUS VARCHAR(20),
    RATING VARCHAR(10),
    LOAD_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FILE_NAME VARCHAR(200),
    ROW_NUMBER NUMBER
);

-- Staging table for addresses CSV
CREATE TABLE IF NOT EXISTS STG_ADDRESSES_RAW (
    ADDRESS_ID VARCHAR(10),
    CUSTOMER_ID VARCHAR(10),
    ADDRESS_TYPE VARCHAR(20),
    ADDRESS_LINE_1 VARCHAR(200),
    ADDRESS_LINE_2 VARCHAR(200),
    CITY VARCHAR(50),
    STATE_PROVINCE VARCHAR(50),
    POSTAL_CODE VARCHAR(20),
    COUNTRY VARCHAR(30),
    IS_DEFAULT VARCHAR(10),
    LOAD_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FILE_NAME VARCHAR(200),
    ROW_NUMBER NUMBER
);

-- Staging table for departments CSV
CREATE TABLE IF NOT EXISTS STG_DEPARTMENTS_RAW (
    DEPARTMENT_ID VARCHAR(10),
    DEPARTMENT_NAME VARCHAR(100),
    DEPARTMENT_CODE VARCHAR(20),
    DESCRIPTION VARCHAR(200),
    BUDGET VARCHAR(20),
    LOCATION VARCHAR(100),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(100),
    LOAD_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FILE_NAME VARCHAR(200),
    ROW_NUMBER NUMBER
);

-- Staging table for positions CSV
CREATE TABLE IF NOT EXISTS STG_POSITIONS_RAW (
    POSITION_ID VARCHAR(10),
    POSITION_TITLE VARCHAR(100),
    POSITION_CODE VARCHAR(20),
    DEPARTMENT_ID VARCHAR(10),
    JOB_LEVEL VARCHAR(10),
    MIN_SALARY VARCHAR(20),
    MAX_SALARY VARCHAR(20),
    DESCRIPTION VARCHAR(200),
    STATUS VARCHAR(20),
    LOAD_TIMESTAMP TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    FILE_NAME VARCHAR(200),
    ROW_NUMBER NUMBER
);

-- Clean staging tables
CREATE TABLE IF NOT EXISTS STG_CUSTOMER_SEGMENTS_CLEAN (
    SEGMENT_ID NUMBER,
    SEGMENT_NAME VARCHAR(50),
    DESCRIPTION VARCHAR(200),
    MIN_ANNUAL_REVENUE DECIMAL(15,2),
    MAX_ANNUAL_REVENUE DECIMAL(15,2),
    DISCOUNT_RATE DECIMAL(5,4),
    PROCESSED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    SOURCE_FILE VARCHAR(200),
    VALIDATION_STATUS VARCHAR(20) DEFAULT 'VALID'
);

CREATE TABLE IF NOT EXISTS STG_CATEGORIES_CLEAN (
    CATEGORY_ID NUMBER,
    CATEGORY_NAME VARCHAR(50),
    DESCRIPTION VARCHAR(200),
    PARENT_CATEGORY_ID NUMBER,
    PROCESSED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    SOURCE_FILE VARCHAR(200),
    VALIDATION_STATUS VARCHAR(20) DEFAULT 'VALID'
);

CREATE TABLE IF NOT EXISTS STG_SUPPLIERS_CLEAN (
    SUPPLIER_ID NUMBER,
    SUPPLIER_NAME VARCHAR(100),
    CONTACT_NAME VARCHAR(100),
    CONTACT_TITLE VARCHAR(50),
    ADDRESS VARCHAR(200),
    CITY VARCHAR(50),
    REGION VARCHAR(50),
    POSTAL_CODE VARCHAR(20),
    COUNTRY VARCHAR(30),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(100),
    WEBSITE VARCHAR(200),
    STATUS VARCHAR(20),
    RATING DECIMAL(3,1),
    PROCESSED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    SOURCE_FILE VARCHAR(200),
    VALIDATION_STATUS VARCHAR(20) DEFAULT 'VALID'
);

CREATE TABLE IF NOT EXISTS STG_ADDRESSES_CLEAN (
    ADDRESS_ID NUMBER,
    CUSTOMER_ID NUMBER,
    ADDRESS_TYPE VARCHAR(20),
    ADDRESS_LINE_1 VARCHAR(200),
    ADDRESS_LINE_2 VARCHAR(200),
    CITY VARCHAR(50),
    STATE_PROVINCE VARCHAR(50),
    POSTAL_CODE VARCHAR(20),
    COUNTRY VARCHAR(30),
    IS_DEFAULT BOOLEAN,
    PROCESSED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    SOURCE_FILE VARCHAR(200),
    VALIDATION_STATUS VARCHAR(20) DEFAULT 'VALID'
);

CREATE TABLE IF NOT EXISTS STG_DEPARTMENTS_CLEAN (
    DEPARTMENT_ID NUMBER,
    DEPARTMENT_NAME VARCHAR(100),
    DEPARTMENT_CODE VARCHAR(20),
    DESCRIPTION VARCHAR(200),
    BUDGET DECIMAL(15,2),
    LOCATION VARCHAR(100),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(100),
    PROCESSED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    SOURCE_FILE VARCHAR(200),
    VALIDATION_STATUS VARCHAR(20) DEFAULT 'VALID'
);

CREATE TABLE IF NOT EXISTS STG_POSITIONS_CLEAN (
    POSITION_ID NUMBER,
    POSITION_TITLE VARCHAR(100),
    POSITION_CODE VARCHAR(20),
    DEPARTMENT_ID NUMBER,
    JOB_LEVEL NUMBER,
    MIN_SALARY DECIMAL(10,2),
    MAX_SALARY DECIMAL(10,2),
    DESCRIPTION VARCHAR(200),
    STATUS VARCHAR(20),
    PROCESSED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    SOURCE_FILE VARCHAR(200),
    VALIDATION_STATUS VARCHAR(20) DEFAULT 'VALID'
);